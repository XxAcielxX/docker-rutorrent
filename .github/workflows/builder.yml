name: builder-ci

on:
  push:
    tags:
      - 'v*'

env:
  DOCKERHUB_SLUG: xxacielxx/rutorrent
  GHCR_SLUG: ghcr.io/xxacielxx/rutorrent

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up environments
        run: |
          echo "version=org.opencontainers.image.version=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "revision=org.opencontainers.image.revision=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "created=org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Image & Push amd64
        run: |
          docker buildx build \
          --provenance=false \
          --label ${{ env.version }} \
          --label ${{ env.revision }} \
          --label ${{ env.created }} \
          -t "${{ env.DOCKERHUB_SLUG }}:amd64-latest" \
          -t "${{ env.GHCR_SLUG }}:amd64-latest" \
          --platform linux/amd64 -f ./Dockerfile --push .

      - name: Build Image & Push arm32v7
        run: |
          docker buildx build \
          --provenance=false \
          --label ${{ env.version }} \
          --label ${{ env.revision }} \
          --label ${{ env.created }} \
          -t "${{ env.DOCKERHUB_SLUG }}:arm32v7-latest" \
          -t "${{ env.GHCR_SLUG }}:arm32v7-latest" \
          --platform linux/arm/v7 -f ./Dockerfile --push .

      - name: Build Image & Push arm64v8
        run: |
          docker buildx build \
          --provenance=false \
          --label ${{ env.version }} \
          --label ${{ env.revision }} \
          --label ${{ env.created }} \
          -t "${{ env.DOCKERHUB_SLUG }}:arm64v8-latest" \
          -t "${{ env.GHCR_SLUG }}:arm64v8-latest" \
          --platform linux/arm64/v8 -f ./Dockerfile --push .

      - name: Create manifest Docker Hub
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          [[ -f Dockerfile ]] && AMD64=${{ env.DOCKERHUB_SLUG }}:amd64-latest
          [[ -f Dockerfile ]] && ARMV7=${{ env.DOCKERHUB_SLUG }}:arm32v7-latest
          [[ -f Dockerfile ]] && ARM64=${{ env.DOCKERHUB_SLUG }}:arm64v8-latest
          echo "*** Push Latest Tag Image ***"
          docker manifest create ${{ env.DOCKERHUB_SLUG }}:latest ${AMD64} ${ARMV7} ${ARM64}
          docker manifest push ${{ env.DOCKERHUB_SLUG }}:latest

      - name: Create manifest GitHub
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          [[ -f Dockerfile ]] && GHCR_AMD64=${{ env.GHCR_SLUG }}:amd64-latest
          [[ -f Dockerfile ]] && GHCR_ARMV7=${{ env.GHCR_SLUG }}:arm32v7-latest
          [[ -f Dockerfile ]] && GHCR_ARM64=${{ env.GHCR_SLUG }}:arm64v8-latest
          echo "*** Push GitHub Latest Tag Image ***"
          docker manifest create ${{ env.GHCR_SLUG }}:latest ${GHCR_AMD64} ${GHCR_ARMV7} ${GHCR_ARM64}
          docker manifest push ${{ env.GHCR_SLUG }}:latest
